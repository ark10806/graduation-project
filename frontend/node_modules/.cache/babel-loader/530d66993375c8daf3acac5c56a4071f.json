{"ast":null,"code":"import React from'react';import{useSelector,useDispatch}from'react-redux';import{CSidebar,CSidebarBrand,CSidebarNav,CSidebarToggler}from'@coreui/react';import CIcon from'@coreui/icons-react';import{AppSidebarNav}from'./AppSidebarNav';import{logoNegative}from'src/assets/brand/logo-negative';import{sygnet}from'src/assets/brand/sygnet';import SimpleBar from'simplebar-react';import'simplebar/dist/simplebar.min.css';// sidebar nav config\nimport navigation from'../_nav';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AppSidebar=function AppSidebar(){var dispatch=useDispatch();var unfoldable=useSelector(function(state){return state.sidebarUnfoldable;});var sidebarShow=useSelector(function(state){return state.sidebarShow;});return/*#__PURE__*/_jsxs(CSidebar,{position:\"fixed\",unfoldable:unfoldable,visible:sidebarShow,onVisibleChange:function onVisibleChange(visible){dispatch({type:'set',sidebarShow:visible});},children:[/*#__PURE__*/_jsxs(CSidebarBrand,{className:\"d-none d-md-flex\",to:\"/\",children:[/*#__PURE__*/_jsx(CIcon,{className:\"sidebar-brand-full\",icon:logoNegative,height:35}),/*#__PURE__*/_jsx(CIcon,{className:\"sidebar-brand-narrow\",icon:sygnet,height:35})]}),/*#__PURE__*/_jsx(CSidebarNav,{children:/*#__PURE__*/_jsx(SimpleBar,{children:/*#__PURE__*/_jsx(AppSidebarNav,{items:navigation})})}),/*#__PURE__*/_jsx(CSidebarToggler,{className:\"d-none d-lg-flex\",onClick:function onClick(){return dispatch({type:'set',sidebarUnfoldable:!unfoldable});}})]});};export default/*#__PURE__*/React.memo(AppSidebar);","map":{"version":3,"sources":["/home/seungchan/Desktop/Projs/kakao/Kakao_ML/frontend/src/components/AppSidebar.js"],"names":["React","useSelector","useDispatch","CSidebar","CSidebarBrand","CSidebarNav","CSidebarToggler","CIcon","AppSidebarNav","logoNegative","sygnet","SimpleBar","navigation","AppSidebar","dispatch","unfoldable","state","sidebarUnfoldable","sidebarShow","visible","type","memo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,QAAT,CAAmBC,aAAnB,CAAkCC,WAAlC,CAA+CC,eAA/C,KAAsE,eAAtE,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CAEA,OAASC,aAAT,KAA8B,iBAA9B,CAEA,OAASC,YAAT,KAA6B,gCAA7B,CACA,OAASC,MAAT,KAAuB,yBAAvB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,MAAO,kCAAP,CAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,SAAvB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CACA,GAAMa,CAAAA,UAAU,CAAGd,WAAW,CAAC,SAACe,KAAD,QAAWA,CAAAA,KAAK,CAACC,iBAAjB,EAAD,CAA9B,CACA,GAAMC,CAAAA,WAAW,CAAGjB,WAAW,CAAC,SAACe,KAAD,QAAWA,CAAAA,KAAK,CAACE,WAAjB,EAAD,CAA/B,CAEA,mBACE,MAAC,QAAD,EACE,QAAQ,CAAC,OADX,CAEE,UAAU,CAAEH,UAFd,CAGE,OAAO,CAAEG,WAHX,CAIE,eAAe,CAAE,yBAACC,OAAD,CAAa,CAC5BL,QAAQ,CAAC,CAAEM,IAAI,CAAE,KAAR,CAAeF,WAAW,CAAEC,OAA5B,CAAD,CAAR,CACD,CANH,wBAQE,MAAC,aAAD,EAAe,SAAS,CAAC,kBAAzB,CAA4C,EAAE,CAAC,GAA/C,wBACE,KAAC,KAAD,EAAO,SAAS,CAAC,oBAAjB,CAAsC,IAAI,CAAEV,YAA5C,CAA0D,MAAM,CAAE,EAAlE,EADF,cAEE,KAAC,KAAD,EAAO,SAAS,CAAC,sBAAjB,CAAwC,IAAI,CAAEC,MAA9C,CAAsD,MAAM,CAAE,EAA9D,EAFF,GARF,cAYE,KAAC,WAAD,wBACE,KAAC,SAAD,wBACE,KAAC,aAAD,EAAe,KAAK,CAAEE,UAAtB,EADF,EADF,EAZF,cAiBE,KAAC,eAAD,EACE,SAAS,CAAC,kBADZ,CAEE,OAAO,CAAE,yBAAME,CAAAA,QAAQ,CAAC,CAAEM,IAAI,CAAE,KAAR,CAAeH,iBAAiB,CAAE,CAACF,UAAnC,CAAD,CAAd,EAFX,EAjBF,GADF,CAwBD,CA7BD,CA+BA,2BAAef,KAAK,CAACqB,IAAN,CAAWR,UAAX,CAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        <CIcon className=\"sidebar-brand-full\" icon={logoNegative} height={35} />\n        <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n"]},"metadata":{},"sourceType":"module"}