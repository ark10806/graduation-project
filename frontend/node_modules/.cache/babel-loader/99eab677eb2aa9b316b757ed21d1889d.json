{"ast":null,"code":"import _slicedToArray from\"/home/seungchan/Desktop/Projs/kakao/Kakao_ML/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useRef,useState}from'react';import{CCard,CCardHeader,CCardBody,CButton,CRow,CCol,CToast,CToastBody,CToastClose,CToastHeader,CToaster}from'@coreui/react';import{DocsCallout,DocsExample}from'src/components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ExampleToast=function ExampleToast(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),toast=_useState2[0],addToast=_useState2[1];var toaster=useRef();var exampleToast=/*#__PURE__*/_jsxs(CToast,{title:\"CoreUI for React.js\",children:[/*#__PURE__*/_jsxs(CToastHeader,{closeButton:true,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"rounded me-2\",width:\"20\",height:\"20\",xmlns:\"http://www.w3.org/2000/svg\",preserveAspectRatio:\"xMidYMid slice\",focusable:\"false\",role:\"img\",children:/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"#007aff\"})}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:\"CoreUI for React.js\"}),/*#__PURE__*/_jsx(\"small\",{children:\"7 min ago\"})]}),/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"})]});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CButton,{onClick:function onClick(){return addToast(exampleToast);},children:\"Send a toast\"}),/*#__PURE__*/_jsx(CToaster,{ref:toaster,push:toast,placement:\"top-end\"})]});};var Toasts=function Toasts(){return/*#__PURE__*/_jsxs(CRow,{children:[/*#__PURE__*/_jsx(CCol,{xs:12,children:/*#__PURE__*/_jsx(DocsCallout,{name:\"Toast\",href:\"components/toast\"})}),/*#__PURE__*/_jsx(CCol,{xs:12,children:/*#__PURE__*/_jsxs(CCard,{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(CCardHeader,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"React Toast\"}),\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Basic\"})]}),/*#__PURE__*/_jsxs(CCardBody,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-medium-emphasis small\",children:\"Toasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your \\u201Ctoasted\\u201D content and strongly encourage a dismiss button.\"}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast\",children:/*#__PURE__*/_jsxs(CToast,{title:\"CoreUI for React.js\",autohide:false,visible:true,children:[/*#__PURE__*/_jsxs(CToastHeader,{closeButton:true,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"rounded me-2\",width:\"20\",height:\"20\",xmlns:\"http://www.w3.org/2000/svg\",preserveAspectRatio:\"xMidYMid slice\",focusable:\"false\",role:\"img\",children:/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"#007aff\"})}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:\"CoreUI for React.js\"}),/*#__PURE__*/_jsx(\"small\",{children:\"7 min ago\"})]}),/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"})]})}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast\",children:ExampleToast()})]})]})}),/*#__PURE__*/_jsx(CCol,{xs:12,children:/*#__PURE__*/_jsxs(CCard,{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(CCardHeader,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"React Toast\"}),\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Translucent\"})]}),/*#__PURE__*/_jsxs(CCardBody,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-medium-emphasis small\",children:\"Toasts are slightly translucent to blend in with what's below them.\"}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast#translucent\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-dark p-3\",children:/*#__PURE__*/_jsxs(CToast,{title:\"CoreUI for React.js\",autohide:false,visible:true,children:[/*#__PURE__*/_jsxs(CToastHeader,{closeButton:true,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"rounded me-2\",width:\"20\",height:\"20\",xmlns:\"http://www.w3.org/2000/svg\",preserveAspectRatio:\"xMidYMid slice\",focusable:\"false\",role:\"img\",children:/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"#007aff\"})}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:\"CoreUI for React.js\"}),/*#__PURE__*/_jsx(\"small\",{children:\"7 min ago\"})]}),/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"})]})})})]})]})}),/*#__PURE__*/_jsx(CCol,{xs:12,children:/*#__PURE__*/_jsxs(CCard,{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(CCardHeader,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"React Toast\"}),\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Stacking\"})]}),/*#__PURE__*/_jsxs(CCardBody,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-medium-emphasis small\",children:\"You can stack toasts by wrapping them in a toast container, which will vertically add some spacing.\"}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast#stacking\",children:/*#__PURE__*/_jsxs(CToaster,{children:[/*#__PURE__*/_jsxs(CToast,{title:\"CoreUI for React.js\",autohide:false,visible:true,children:[/*#__PURE__*/_jsxs(CToastHeader,{closeButton:true,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"rounded me-2\",width:\"20\",height:\"20\",xmlns:\"http://www.w3.org/2000/svg\",preserveAspectRatio:\"xMidYMid slice\",focusable:\"false\",role:\"img\",children:/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"#007aff\"})}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:\"CoreUI for React.js\"}),/*#__PURE__*/_jsx(\"small\",{children:\"7 min ago\"})]}),/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"})]}),/*#__PURE__*/_jsxs(CToast,{title:\"CoreUI for React.js\",autohide:false,visible:true,children:[/*#__PURE__*/_jsxs(CToastHeader,{closeButton:true,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"rounded me-2\",width:\"20\",height:\"20\",xmlns:\"http://www.w3.org/2000/svg\",preserveAspectRatio:\"xMidYMid slice\",focusable:\"false\",role:\"img\",children:/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"#007aff\"})}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:\"CoreUI for React.js\"}),/*#__PURE__*/_jsx(\"small\",{children:\"7 min ago\"})]}),/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"})]})]})})]})]})}),/*#__PURE__*/_jsx(CCol,{xs:12,children:/*#__PURE__*/_jsxs(CCard,{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(CCardHeader,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"React Toast\"}),\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Custom content\"})]}),/*#__PURE__*/_jsxs(CCardBody,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-medium-emphasis small\",children:[\"Customize your toasts by removing sub-components, tweaking them with\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://coreui.io/docs/4.0/utilities/api\",children:\"utilities\"}),\", or by adding your own markup. Here we've created a simpler toast by removing the default\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"<CToastHeader>\"}),\", adding a custom hide icon from\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://icons.coreui.io\",children:\"CoreUI Icons\"}),\", and using some\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://coreui.io/docs/4.0/utilities/flex\",children:\"flexbox utilities\"}),\" to adjust the layout.\"]}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast#custom-content\",children:/*#__PURE__*/_jsx(CToast,{autohide:false,className:\"align-items-center\",visible:true,children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex\",children:[/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"}),/*#__PURE__*/_jsx(CToastClose,{className:\"me-2 m-auto\"})]})})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-medium-emphasis small\",children:\"Alternatively, you can also add additional controls and components to toasts.\"}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast#custom-content\",children:/*#__PURE__*/_jsx(CToast,{autohide:false,visible:true,children:/*#__PURE__*/_jsxs(CToastBody,{children:[\"Hello, world! This is a toast message.\",/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 pt-2 border-top\",children:[/*#__PURE__*/_jsx(CButton,{type:\"button\",color:\"primary\",size:\"sm\",children:\"Take action\"}),/*#__PURE__*/_jsx(CToastClose,{component:CButton,color:\"secondary\",size:\"sm\",className:\"ms-1\",children:\"Close\"})]})]})})})]})]})}),/*#__PURE__*/_jsx(CCol,{xs:12,children:/*#__PURE__*/_jsxs(CCard,{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(CCardHeader,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"React Toast\"}),\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Custom content\"})]}),/*#__PURE__*/_jsxs(CCardBody,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-medium-emphasis small\",children:[\"Building on the above example, you can create different toast color schemes with our\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://coreui.io/docs/4.0/utilities/colors\",children:\"color\"}),\" and\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://coreui.io/docs/4.0//utilities/background\",children:\"background\"}),\" utilities. Here we've set \",/*#__PURE__*/_jsx(\"code\",{children:\"color=\\\"primary\\\"\"}),\" and added\",' ',/*#__PURE__*/_jsx(\"code\",{children:\".text-white\"}),\" class to the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Ctoast>\"}),\", and then set\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"white\"}),\" property to our close button. For a crisp edge, we remove the default border with \",/*#__PURE__*/_jsx(\"code\",{children:\".border-0\"}),\".\"]}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast#color-schemes\",children:/*#__PURE__*/_jsx(CToast,{autohide:false,color:\"primary\",className:\"text-white align-items-center\",visible:true,children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex\",children:[/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"}),/*#__PURE__*/_jsx(CToastClose,{className:\"me-2 m-auto\",white:true})]})})})]})]})})]});};export default Toasts;","map":{"version":3,"sources":["/home/seungchan/Desktop/Projs/kakao/Kakao_ML/frontend/src/views/notifications/toasts/Toasts.js"],"names":["React","useRef","useState","CCard","CCardHeader","CCardBody","CButton","CRow","CCol","CToast","CToastBody","CToastClose","CToastHeader","CToaster","DocsCallout","DocsExample","ExampleToast","toast","addToast","toaster","exampleToast","Toasts"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport {\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CButton,\n  CRow,\n  CCol,\n  CToast,\n  CToastBody,\n  CToastClose,\n  CToastHeader,\n  CToaster,\n} from '@coreui/react'\nimport { DocsCallout, DocsExample } from 'src/components'\n\nconst ExampleToast = () => {\n  const [toast, addToast] = useState(0)\n  const toaster = useRef()\n  const exampleToast = (\n    <CToast title=\"CoreUI for React.js\">\n      <CToastHeader closeButton>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n        </svg>\n        <strong className=\"me-auto\">CoreUI for React.js</strong>\n        <small>7 min ago</small>\n      </CToastHeader>\n      <CToastBody>Hello, world! This is a toast message.</CToastBody>\n    </CToast>\n  )\n  return (\n    <>\n      <CButton onClick={() => addToast(exampleToast)}>Send a toast</CButton>\n      <CToaster ref={toaster} push={toast} placement=\"top-end\" />\n    </>\n  )\n}\n\nconst Toasts = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Toast\" href=\"components/toast\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Basic</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Toasts are as flexible as you need and have very little required markup. At a minimum,\n              we require a single element to contain your “toasted” content and strongly encourage a\n              dismiss button.\n            </p>\n            <DocsExample href=\"components/toast\">\n              <CToast title=\"CoreUI for React.js\" autohide={false} visible={true}>\n                <CToastHeader closeButton>\n                  <svg\n                    className=\"rounded me-2\"\n                    width=\"20\"\n                    height=\"20\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    preserveAspectRatio=\"xMidYMid slice\"\n                    focusable=\"false\"\n                    role=\"img\"\n                  >\n                    <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n                  </svg>\n                  <strong className=\"me-auto\">CoreUI for React.js</strong>\n                  <small>7 min ago</small>\n                </CToastHeader>\n                <CToastBody>Hello, world! This is a toast message.</CToastBody>\n              </CToast>\n            </DocsExample>\n            <DocsExample href=\"components/toast\">{ExampleToast()}</DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Translucent</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Toasts are slightly translucent to blend in with what&#39;s below them.\n            </p>\n            <DocsExample href=\"components/toast#translucent\">\n              <div className=\"bg-dark p-3\">\n                <CToast title=\"CoreUI for React.js\" autohide={false} visible={true}>\n                  <CToastHeader closeButton>\n                    <svg\n                      className=\"rounded me-2\"\n                      width=\"20\"\n                      height=\"20\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      preserveAspectRatio=\"xMidYMid slice\"\n                      focusable=\"false\"\n                      role=\"img\"\n                    >\n                      <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n                    </svg>\n                    <strong className=\"me-auto\">CoreUI for React.js</strong>\n                    <small>7 min ago</small>\n                  </CToastHeader>\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                </CToast>\n              </div>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Stacking</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              You can stack toasts by wrapping them in a toast container, which will vertically add\n              some spacing.\n            </p>\n            <DocsExample href=\"components/toast#stacking\">\n              <CToaster>\n                <CToast title=\"CoreUI for React.js\" autohide={false} visible={true}>\n                  <CToastHeader closeButton>\n                    <svg\n                      className=\"rounded me-2\"\n                      width=\"20\"\n                      height=\"20\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      preserveAspectRatio=\"xMidYMid slice\"\n                      focusable=\"false\"\n                      role=\"img\"\n                    >\n                      <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n                    </svg>\n                    <strong className=\"me-auto\">CoreUI for React.js</strong>\n                    <small>7 min ago</small>\n                  </CToastHeader>\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                </CToast>\n                <CToast title=\"CoreUI for React.js\" autohide={false} visible={true}>\n                  <CToastHeader closeButton>\n                    <svg\n                      className=\"rounded me-2\"\n                      width=\"20\"\n                      height=\"20\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      preserveAspectRatio=\"xMidYMid slice\"\n                      focusable=\"false\"\n                      role=\"img\"\n                    >\n                      <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n                    </svg>\n                    <strong className=\"me-auto\">CoreUI for React.js</strong>\n                    <small>7 min ago</small>\n                  </CToastHeader>\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                </CToast>\n              </CToaster>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Custom content</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Customize your toasts by removing sub-components, tweaking them with{' '}\n              <a href=\"https://coreui.io/docs/4.0/utilities/api\">utilities</a>, or by adding your\n              own markup. Here we&#39;ve created a simpler toast by removing the default{' '}\n              <code>&lt;CToastHeader&gt;</code>, adding a custom hide icon from{' '}\n              <a href=\"https://icons.coreui.io\">CoreUI Icons</a>, and using some{' '}\n              <a href=\"https://coreui.io/docs/4.0/utilities/flex\">flexbox utilities</a> to adjust\n              the layout.\n            </p>\n            <DocsExample href=\"components/toast#custom-content\">\n              <CToast autohide={false} className=\"align-items-center\" visible={true}>\n                <div className=\"d-flex\">\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                  <CToastClose className=\"me-2 m-auto\" />\n                </div>\n              </CToast>\n            </DocsExample>\n            <p className=\"text-medium-emphasis small\">\n              Alternatively, you can also add additional controls and components to toasts.\n            </p>\n            <DocsExample href=\"components/toast#custom-content\">\n              <CToast autohide={false} visible={true}>\n                <CToastBody>\n                  Hello, world! This is a toast message.\n                  <div className=\"mt-2 pt-2 border-top\">\n                    <CButton type=\"button\" color=\"primary\" size=\"sm\">\n                      Take action\n                    </CButton>\n                    <CToastClose component={CButton} color=\"secondary\" size=\"sm\" className=\"ms-1\">\n                      Close\n                    </CToastClose>\n                  </div>\n                </CToastBody>\n              </CToast>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Custom content</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Building on the above example, you can create different toast color schemes with our{' '}\n              <a href=\"https://coreui.io/docs/4.0/utilities/colors\">color</a> and{' '}\n              <a href=\"https://coreui.io/docs/4.0//utilities/background\">background</a> utilities.\n              Here we&#39;ve set <code>color=&#34;primary&#34;</code> and added{' '}\n              <code>.text-white</code> class to the <code>&lt;Ctoast&gt;</code>, and then set{' '}\n              <code>white</code> property to our close button. For a crisp edge, we remove the\n              default border with <code>.border-0</code>.\n            </p>\n            <DocsExample href=\"components/toast#color-schemes\">\n              <CToast\n                autohide={false}\n                color=\"primary\"\n                className=\"text-white align-items-center\"\n                visible={true}\n              >\n                <div className=\"d-flex\">\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                  <CToastClose className=\"me-2 m-auto\" white />\n                </div>\n              </CToast>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Toasts\n"]},"metadata":{},"sourceType":"module"}