{"code":"(this[\"webpackJsonp@coreui/coreui-free-react-admin-template\"]=this[\"webpackJsonp@coreui/coreui-free-react-admin-template\"]||[]).push([[26],{624:function(e,t,s){\"use strict\";s.r(t);s(2);var i=s(538),o=s(539),c=s(24);t.default=function(){return Object(c.jsxs)(i.vb,{children:[Object(c.jsx)(i.C,{xs:12,children:Object(c.jsx)(o.f,{name:\"Accordion\",href:\"components/accordion\"})}),Object(c.jsxs)(i.C,{xs:12,children:[Object(c.jsxs)(i.p,{className:\"mb-4\",children:[Object(c.jsx)(i.t,{children:Object(c.jsx)(\"strong\",{children:\"React Accordion\"})}),Object(c.jsxs)(i.q,{children:[Object(c.jsx)(\"p\",{className:\"text-medium-emphasis small\",children:\"Click the accordions below to expand/collapse the accordion content.\"}),Object(c.jsx)(o.g,{href:\"components/accordion\",children:Object(c.jsxs)(i.a,{activeItemKey:2,children:[Object(c.jsxs)(i.d,{itemKey:1,children:[Object(c.jsx)(i.c,{children:\"Accordion Item #1\"}),Object(c.jsxs)(i.b,{children:[Object(c.jsx)(\"strong\",{children:\"This is the first item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",Object(c.jsx)(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]}),Object(c.jsxs)(i.d,{itemKey:2,children:[Object(c.jsx)(i.c,{children:\"Accordion Item #2\"}),Object(c.jsxs)(i.b,{children:[Object(c.jsx)(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",Object(c.jsx)(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]}),Object(c.jsxs)(i.d,{itemKey:3,children:[Object(c.jsx)(i.c,{children:\"Accordion Item #3\"}),Object(c.jsxs)(i.b,{children:[Object(c.jsx)(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",Object(c.jsx)(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]})]})})]})]}),Object(c.jsxs)(i.p,{className:\"mb-4\",children:[Object(c.jsxs)(i.t,{children:[Object(c.jsx)(\"strong\",{children:\"React Accordion\"}),\" \",Object(c.jsx)(\"small\",{children:\"Flush\"})]}),Object(c.jsxs)(i.q,{children:[Object(c.jsxs)(\"p\",{className:\"text-medium-emphasis small\",children:[\"Add \",Object(c.jsx)(\"code\",{children:\"flush\"}),\" to remove the default \",Object(c.jsx)(\"code\",{children:\"background-color\"}),\", some borders, and some rounded corners to render accordions edge-to-edge with their parent container.\"]}),Object(c.jsx)(o.g,{href:\"components/accordion#flush\",children:Object(c.jsxs)(i.a,{flush:!0,children:[Object(c.jsxs)(i.d,{itemKey:1,children:[Object(c.jsx)(i.c,{children:\"Accordion Item #1\"}),Object(c.jsxs)(i.b,{children:[Object(c.jsx)(\"strong\",{children:\"This is the first item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",Object(c.jsx)(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]}),Object(c.jsxs)(i.d,{itemKey:2,children:[Object(c.jsx)(i.c,{children:\"Accordion Item #2\"}),Object(c.jsxs)(i.b,{children:[Object(c.jsx)(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",Object(c.jsx)(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]}),Object(c.jsxs)(i.d,{itemKey:3,children:[Object(c.jsx)(i.c,{children:\"Accordion Item #3\"}),Object(c.jsxs)(i.b,{children:[Object(c.jsx)(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",Object(c.jsx)(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]})]})})]})]}),Object(c.jsxs)(i.p,{className:\"mb-4\",children:[Object(c.jsxs)(i.t,{children:[Object(c.jsx)(\"strong\",{children:\"React Accordion\"}),\" \",Object(c.jsx)(\"small\",{children:\"Always open\"})]}),Object(c.jsxs)(i.q,{children:[Object(c.jsxs)(\"p\",{className:\"text-medium-emphasis small\",children:[\"Add \",Object(c.jsx)(\"code\",{children:\"alwaysOpen\"}),\" property to make accordion items stay open when another item is opened.\"]}),Object(c.jsx)(o.g,{href:\"components/accordion#flush\",children:Object(c.jsxs)(i.a,{alwaysOpen:!0,children:[Object(c.jsxs)(i.d,{itemKey:1,children:[Object(c.jsx)(i.c,{children:\"Accordion Item #1\"}),Object(c.jsxs)(i.b,{children:[Object(c.jsx)(\"strong\",{children:\"This is the first item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",Object(c.jsx)(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]}),Object(c.jsxs)(i.d,{itemKey:2,children:[Object(c.jsx)(i.c,{children:\"Accordion Item #2\"}),Object(c.jsxs)(i.b,{children:[Object(c.jsx)(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",Object(c.jsx)(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]}),Object(c.jsxs)(i.d,{itemKey:3,children:[Object(c.jsx)(i.c,{children:\"Accordion Item #3\"}),Object(c.jsxs)(i.b,{children:[Object(c.jsx)(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",Object(c.jsx)(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]})]})})]})]})]})]})}}}]);","name":"static/js/26.6de3091c.chunk.js","map":{"version":3,"sources":["static/js/26.6de3091c.chunk.js"],"names":["this","push","module","__webpack_exports__","__webpack_require__","r","_coreui_react__WEBPACK_IMPORTED_MODULE_1__","src_components__WEBPACK_IMPORTED_MODULE_2__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__","Object","children","xs","name","href","className","activeItemKey","itemKey","flush","alwaysOpen"],"mappings":"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"},"input":"(this[\"webpackJsonp@coreui/coreui-free-react-admin-template\"] = this[\"webpackJsonp@coreui/coreui-free-react-admin-template\"] || []).push([[26],{\n\n/***/ 624:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _coreui_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(538);\n/* harmony import */ var src_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(539);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(24);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);\nvar Accordion=function Accordion(){return/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CRow */ \"vb\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CCol */ \"C\"],{xs:12,children:/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(src_components__WEBPACK_IMPORTED_MODULE_2__[/* DocsCallout */ \"f\"],{name:\"Accordion\",href:\"components/accordion\"})}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CCol */ \"C\"],{xs:12,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CCard */ \"p\"],{className:\"mb-4\",children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CCardHeader */ \"t\"],{children:/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"strong\",{children:\"React Accordion\"})}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CCardBody */ \"q\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",{className:\"text-medium-emphasis small\",children:\"Click the accordions below to expand/collapse the accordion content.\"}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(src_components__WEBPACK_IMPORTED_MODULE_2__[/* DocsExample */ \"g\"],{href:\"components/accordion\",children:/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordion */ \"a\"],{activeItemKey:2,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionItem */ \"d\"],{itemKey:1,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionHeader */ \"c\"],{children:\"Accordion Item #1\"}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionBody */ \"b\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"strong\",{children:\"This is the first item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionItem */ \"d\"],{itemKey:2,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionHeader */ \"c\"],{children:\"Accordion Item #2\"}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionBody */ \"b\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionItem */ \"d\"],{itemKey:3,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionHeader */ \"c\"],{children:\"Accordion Item #3\"}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionBody */ \"b\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]})]})})]})]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CCard */ \"p\"],{className:\"mb-4\",children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CCardHeader */ \"t\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"strong\",{children:\"React Accordion\"}),\" \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"small\",{children:\"Flush\"})]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CCardBody */ \"q\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(\"p\",{className:\"text-medium-emphasis small\",children:[\"Add \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"code\",{children:\"flush\"}),\" to remove the default \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"code\",{children:\"background-color\"}),\", some borders, and some rounded corners to render accordions edge-to-edge with their parent container.\"]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(src_components__WEBPACK_IMPORTED_MODULE_2__[/* DocsExample */ \"g\"],{href:\"components/accordion#flush\",children:/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordion */ \"a\"],{flush:true,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionItem */ \"d\"],{itemKey:1,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionHeader */ \"c\"],{children:\"Accordion Item #1\"}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionBody */ \"b\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"strong\",{children:\"This is the first item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionItem */ \"d\"],{itemKey:2,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionHeader */ \"c\"],{children:\"Accordion Item #2\"}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionBody */ \"b\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionItem */ \"d\"],{itemKey:3,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionHeader */ \"c\"],{children:\"Accordion Item #3\"}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionBody */ \"b\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]})]})})]})]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CCard */ \"p\"],{className:\"mb-4\",children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CCardHeader */ \"t\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"strong\",{children:\"React Accordion\"}),\" \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"small\",{children:\"Always open\"})]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CCardBody */ \"q\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(\"p\",{className:\"text-medium-emphasis small\",children:[\"Add \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"code\",{children:\"alwaysOpen\"}),\" property to make accordion items stay open when another item is opened.\"]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(src_components__WEBPACK_IMPORTED_MODULE_2__[/* DocsExample */ \"g\"],{href:\"components/accordion#flush\",children:/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordion */ \"a\"],{alwaysOpen:true,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionItem */ \"d\"],{itemKey:1,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionHeader */ \"c\"],{children:\"Accordion Item #1\"}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionBody */ \"b\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"strong\",{children:\"This is the first item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionItem */ \"d\"],{itemKey:2,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionHeader */ \"c\"],{children:\"Accordion Item #2\"}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionBody */ \"b\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionItem */ \"d\"],{itemKey:3,children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionHeader */ \"c\"],{children:\"Accordion Item #3\"}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(_coreui_react__WEBPACK_IMPORTED_MODULE_1__[/* CAccordionBody */ \"b\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})]})]})})]})]})]})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (Accordion);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/seungchan/Desktop/Projs/kakao/Kakao_ML/frontend/src/views/base/accordion/Accordion.js"],"names":["Accordion"],"mappings":"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","file":"x","sourcesContent":["import React from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CAccordion,\n  CAccordionBody,\n  CAccordionHeader,\n  CAccordionItem,\n} from '@coreui/react'\nimport { DocsCallout, DocsExample } from 'src/components'\n\nconst Accordion = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Accordion\" href=\"components/accordion\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Accordion</strong>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Click the accordions below to expand/collapse the accordion content.\n            </p>\n            <DocsExample href=\"components/accordion\">\n              <CAccordion activeItemKey={2}>\n                <CAccordionItem itemKey={1}>\n                  <CAccordionHeader>Accordion Item #1</CAccordionHeader>\n                  <CAccordionBody>\n                    <strong>This is the first item&#39;s accordion body.</strong> It is hidden by\n                    default, until the collapse plugin adds the appropriate classes that we use to\n                    style each element. These classes control the overall appearance, as well as the\n                    showing and hiding via CSS transitions. You can modify any of this with custom\n                    CSS or overriding our default variables. It&#39;s also worth noting that just\n                    about any HTML can go within the <code>.accordion-body</code>, though the\n                    transition does limit overflow.\n                  </CAccordionBody>\n                </CAccordionItem>\n                <CAccordionItem itemKey={2}>\n                  <CAccordionHeader>Accordion Item #2</CAccordionHeader>\n                  <CAccordionBody>\n                    <strong>This is the second item&#39;s accordion body.</strong> It is hidden by\n                    default, until the collapse plugin adds the appropriate classes that we use to\n                    style each element. These classes control the overall appearance, as well as the\n                    showing and hiding via CSS transitions. You can modify any of this with custom\n                    CSS or overriding our default variables. It&#39;s also worth noting that just\n                    about any HTML can go within the <code>.accordion-body</code>, though the\n                    transition does limit overflow.\n                  </CAccordionBody>\n                </CAccordionItem>\n                <CAccordionItem itemKey={3}>\n                  <CAccordionHeader>Accordion Item #3</CAccordionHeader>\n                  <CAccordionBody>\n                    <strong>This is the second item&#39;s accordion body.</strong> It is hidden by\n                    default, until the collapse plugin adds the appropriate classes that we use to\n                    style each element. These classes control the overall appearance, as well as the\n                    showing and hiding via CSS transitions. You can modify any of this with custom\n                    CSS or overriding our default variables. It&#39;s also worth noting that just\n                    about any HTML can go within the <code>.accordion-body</code>, though the\n                    transition does limit overflow.\n                  </CAccordionBody>\n                </CAccordionItem>\n              </CAccordion>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Accordion</strong> <small>Flush</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>flush</code> to remove the default <code>background-color</code>, some\n              borders, and some rounded corners to render accordions edge-to-edge with their parent\n              container.\n            </p>\n            <DocsExample href=\"components/accordion#flush\">\n              <CAccordion flush>\n                <CAccordionItem itemKey={1}>\n                  <CAccordionHeader>Accordion Item #1</CAccordionHeader>\n                  <CAccordionBody>\n                    <strong>This is the first item&#39;s accordion body.</strong> It is hidden by\n                    default, until the collapse plugin adds the appropriate classes that we use to\n                    style each element. These classes control the overall appearance, as well as the\n                    showing and hiding via CSS transitions. You can modify any of this with custom\n                    CSS or overriding our default variables. It&#39;s also worth noting that just\n                    about any HTML can go within the <code>.accordion-body</code>, though the\n                    transition does limit overflow.\n                  </CAccordionBody>\n                </CAccordionItem>\n                <CAccordionItem itemKey={2}>\n                  <CAccordionHeader>Accordion Item #2</CAccordionHeader>\n                  <CAccordionBody>\n                    <strong>This is the second item&#39;s accordion body.</strong> It is hidden by\n                    default, until the collapse plugin adds the appropriate classes that we use to\n                    style each element. These classes control the overall appearance, as well as the\n                    showing and hiding via CSS transitions. You can modify any of this with custom\n                    CSS or overriding our default variables. It&#39;s also worth noting that just\n                    about any HTML can go within the <code>.accordion-body</code>, though the\n                    transition does limit overflow.\n                  </CAccordionBody>\n                </CAccordionItem>\n                <CAccordionItem itemKey={3}>\n                  <CAccordionHeader>Accordion Item #3</CAccordionHeader>\n                  <CAccordionBody>\n                    <strong>This is the second item&#39;s accordion body.</strong> It is hidden by\n                    default, until the collapse plugin adds the appropriate classes that we use to\n                    style each element. These classes control the overall appearance, as well as the\n                    showing and hiding via CSS transitions. You can modify any of this with custom\n                    CSS or overriding our default variables. It&#39;s also worth noting that just\n                    about any HTML can go within the <code>.accordion-body</code>, though the\n                    transition does limit overflow.\n                  </CAccordionBody>\n                </CAccordionItem>\n              </CAccordion>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Accordion</strong> <small>Always open</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>alwaysOpen</code> property to make accordion items stay open when another\n              item is opened.\n            </p>\n            <DocsExample href=\"components/accordion#flush\">\n              <CAccordion alwaysOpen>\n                <CAccordionItem itemKey={1}>\n                  <CAccordionHeader>Accordion Item #1</CAccordionHeader>\n                  <CAccordionBody>\n                    <strong>This is the first item&#39;s accordion body.</strong> It is hidden by\n                    default, until the collapse plugin adds the appropriate classes that we use to\n                    style each element. These classes control the overall appearance, as well as the\n                    showing and hiding via CSS transitions. You can modify any of this with custom\n                    CSS or overriding our default variables. It&#39;s also worth noting that just\n                    about any HTML can go within the <code>.accordion-body</code>, though the\n                    transition does limit overflow.\n                  </CAccordionBody>\n                </CAccordionItem>\n                <CAccordionItem itemKey={2}>\n                  <CAccordionHeader>Accordion Item #2</CAccordionHeader>\n                  <CAccordionBody>\n                    <strong>This is the second item&#39;s accordion body.</strong> It is hidden by\n                    default, until the collapse plugin adds the appropriate classes that we use to\n                    style each element. These classes control the overall appearance, as well as the\n                    showing and hiding via CSS transitions. You can modify any of this with custom\n                    CSS or overriding our default variables. It&#39;s also worth noting that just\n                    about any HTML can go within the <code>.accordion-body</code>, though the\n                    transition does limit overflow.\n                  </CAccordionBody>\n                </CAccordionItem>\n                <CAccordionItem itemKey={3}>\n                  <CAccordionHeader>Accordion Item #3</CAccordionHeader>\n                  <CAccordionBody>\n                    <strong>This is the second item&#39;s accordion body.</strong> It is hidden by\n                    default, until the collapse plugin adds the appropriate classes that we use to\n                    style each element. These classes control the overall appearance, as well as the\n                    showing and hiding via CSS transitions. You can modify any of this with custom\n                    CSS or overriding our default variables. It&#39;s also worth noting that just\n                    about any HTML can go within the <code>.accordion-body</code>, though the\n                    transition does limit overflow.\n                  </CAccordionBody>\n                </CAccordionItem>\n              </CAccordion>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Accordion\n"]}}